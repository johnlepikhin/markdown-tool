---
name: CI and Release

permissions:
  contents: write
  packages: write

"on":
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"

jobs:
  checks:
    name: Code Checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Cache Cargo registry
        uses: actions/cache@v3
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
          key: ${{ runner.os }}-cargo-${{ hashFiles('**/Cargo.lock') }}
      - name: Rustfmt check
        run: cargo fmt --all -- --check
      - name: Clippy lint
        run: cargo clippy --all -- -D warnings
      - name: Run tests
        run: cargo test --all

  release:
    name: Release Build & Package
    if: startsWith(github.ref, 'refs/tags/v')
    needs: checks
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          override: true
      - name: Install packaging tools
        run: |
          cargo install cargo-deb --locked
      - name: Build Release
        run: cargo build --release
      - name: Build Debian package
        run: cargo deb --no-strip
      - name: Find Debian package
        run: echo "DEB_PATH=target/debian/$(ls target/debian/*.deb | xargs -n1 basename)" >> $GITHUB_ENV
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
      - name: Upload binary asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/markdown-tool
          asset_name: markdown-tool-x86_64-unknown-linux-gnu
          asset_content_type: application/octet-stream
      - name: Upload Debian package
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.DEB_PATH }}
          asset_name: ${{ env.DEB_PATH }}
          asset_content_type: application/x-debian-package
